module.exports = {
"MyRecord": require("./output/Apis", {loadOriginal: true})["MyRecord"],
"AgeRecord": require("./output/Apis", {loadOriginal: true})["AgeRecord"],
"Yield": require("./output/Control.Monad.List.Trans", {loadOriginal: true})["Yield"],
"Skip": require("./output/Control.Monad.List.Trans", {loadOriginal: true})["Skip"],
"RWSResult": require("./output/Control.Monad.RWS.Trans", {loadOriginal: true})["RWSResult"],
"Loop": require("./output/Control.Monad.Rec.Class", {loadOriginal: true})["Loop"],
"Done": require("./output/Control.Monad.Rec.Class", {loadOriginal: true})["Done"],
"FormDataString": require("./output/DOM.XHR.FormData", {loadOriginal: true})["FormDataString"],
"FormDataFile": require("./output/DOM.XHR.FormData", {loadOriginal: true})["FormDataFile"],
"FormDataBlob": require("./output/DOM.XHR.FormData", {loadOriginal: true})["FormDataBlob"],
"Product": require("./output/Data.Generic.Rep", {loadOriginal: true})["Product"],
"DateTime": require("./output/Data.DateTime", {loadOriginal: true})["DateTime"],
"Locale": require("./output/Data.DateTime.Locale", {loadOriginal: true})["Locale"],
"LocalValue": require("./output/Data.DateTime.Locale", {loadOriginal: true})["LocalValue"],
"Left": require("./output/Data.Either", {loadOriginal: true})["Left"],
"Right": require("./output/Data.Either", {loadOriginal: true})["Right"],
"ForeignError": require("./output/Data.Foreign", {loadOriginal: true})["ForeignError"],
"TypeMismatch": require("./output/Data.Foreign", {loadOriginal: true})["TypeMismatch"],
"ErrorAtIndex": require("./output/Data.Foreign", {loadOriginal: true})["ErrorAtIndex"],
"ErrorAtProperty": require("./output/Data.Foreign", {loadOriginal: true})["ErrorAtProperty"],
"JSONError": require("./output/Data.Foreign", {loadOriginal: true})["JSONError"],
"TaggedObject": require("./output/Data.Foreign.Generic.Types", {loadOriginal: true})["TaggedObject"],
"indexString": require("./output/Data.Foreign.Index", {loadOriginal: true})["indexString"],
"indexInt": require("./output/Data.Foreign.Index", {loadOriginal: true})["indexInt"],
"SProd": require("./output/Data.Generic", {loadOriginal: true})["SProd"],
"SRecord": require("./output/Data.Generic", {loadOriginal: true})["SRecord"],
"SNumber": require("./output/Data.Generic", {loadOriginal: true})["SNumber"],
"SBoolean": require("./output/Data.Generic", {loadOriginal: true})["SBoolean"],
"SInt": require("./output/Data.Generic", {loadOriginal: true})["SInt"],
"SString": require("./output/Data.Generic", {loadOriginal: true})["SString"],
"SChar": require("./output/Data.Generic", {loadOriginal: true})["SChar"],
"SArray": require("./output/Data.Generic", {loadOriginal: true})["SArray"],
"SigProd": require("./output/Data.Generic", {loadOriginal: true})["SigProd"],
"SigRecord": require("./output/Data.Generic", {loadOriginal: true})["SigRecord"],
"SigArray": require("./output/Data.Generic", {loadOriginal: true})["SigArray"],
"Inl": require("./output/Data.Generic.Rep", {loadOriginal: true})["Inl"],
"Inr": require("./output/Data.Generic.Rep", {loadOriginal: true})["Inr"],
"StartEnd": require("./output/Data.Interval", {loadOriginal: true})["StartEnd"],
"DurationEnd": require("./output/Data.Interval", {loadOriginal: true})["DurationEnd"],
"StartDuration": require("./output/Data.Interval", {loadOriginal: true})["StartDuration"],
"DurationOnly": require("./output/Data.Interval", {loadOriginal: true})["DurationOnly"],
"RecurringInterval": require("./output/Data.Interval", {loadOriginal: true})["RecurringInterval"],
"ContainsNegativeValue": require("./output/Data.Interval.Duration.Iso", {loadOriginal: true})["ContainsNegativeValue"],
"InvalidFractionalUse": require("./output/Data.Interval.Duration.Iso", {loadOriginal: true})["InvalidFractionalUse"],
"Cons": require("./output/Data.List.Types", {loadOriginal: true})["Cons"],
"Just": require("./output/Data.Maybe", {loadOriginal: true})["Just"],
"NonEmpty": require("./output/Data.NonEmpty", {loadOriginal: true})["NonEmpty"],
"RegexFlags": require("./output/Data.String.Regex.Flags", {loadOriginal: true})["RegexFlags"],
"Time": require("./output/Data.Time", {loadOriginal: true})["Time"],
"Tuple": require("./output/Data.Tuple", {loadOriginal: true})["Tuple"],
"Accept": require("./output/Network.HTTP.RequestHeader", {loadOriginal: true})["Accept"],
"ContentType": require("./output/Network.HTTP.RequestHeader", {loadOriginal: true})["ContentType"],
"RequestHeader": require("./output/Network.HTTP.RequestHeader", {loadOriginal: true})["RequestHeader"],

}